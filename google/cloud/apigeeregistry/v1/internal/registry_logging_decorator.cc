// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apigeeregistry/v1/registry_service.proto

#include "google/cloud/apigeeregistry/v1/internal/registry_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <google/cloud/apigeeregistry/v1/registry_service.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace apigeeregistry_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

RegistryLogging::RegistryLogging(std::shared_ptr<RegistryStub> child,
                                 TracingOptions tracing_options,
                                 std::set<std::string> const& components)
    : child_(std::move(child)),
      tracing_options_(std::move(tracing_options)),
      stream_logging_(components.find("rpc-streams") != components.end()) {}

StatusOr<google::cloud::apigeeregistry::v1::ListApisResponse>
RegistryLogging::ListApis(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListApisRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::ListApisRequest const& request) {
        return child_->ListApis(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::Api> RegistryLogging::GetApi(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::GetApiRequest const& request) {
        return child_->GetApi(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::Api> RegistryLogging::CreateApi(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::CreateApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::CreateApiRequest const& request) {
        return child_->CreateApi(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::Api> RegistryLogging::UpdateApi(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::UpdateApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::UpdateApiRequest const& request) {
        return child_->UpdateApi(context, request);
      },
      context, request, __func__, tracing_options_);
}

Status RegistryLogging::DeleteApi(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteApiRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::DeleteApiRequest const& request) {
        return child_->DeleteApi(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ListApiVersionsResponse>
RegistryLogging::ListApiVersions(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListApiVersionsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::ListApiVersionsRequest const&
                 request) { return child_->ListApiVersions(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryLogging::GetApiVersion(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetApiVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::GetApiVersionRequest const&
                 request) { return child_->GetApiVersion(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryLogging::CreateApiVersion(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::CreateApiVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::CreateApiVersionRequest const&
                 request) {
        return child_->CreateApiVersion(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryLogging::UpdateApiVersion(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::UpdateApiVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::UpdateApiVersionRequest const&
                 request) {
        return child_->UpdateApiVersion(context, request);
      },
      context, request, __func__, tracing_options_);
}

Status RegistryLogging::DeleteApiVersion(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteApiVersionRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::DeleteApiVersionRequest const&
                 request) {
        return child_->DeleteApiVersion(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ListApiSpecsResponse>
RegistryLogging::ListApiSpecs(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListApiSpecsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::ListApiSpecsRequest const&
                 request) { return child_->ListApiSpecs(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryLogging::GetApiSpec(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetApiSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::GetApiSpecRequest const& request) {
        return child_->GetApiSpec(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::api::HttpBody> RegistryLogging::GetApiSpecContents(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetApiSpecContentsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::GetApiSpecContentsRequest const&
                 request) {
        return child_->GetApiSpecContents(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryLogging::CreateApiSpec(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::CreateApiSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::CreateApiSpecRequest const&
                 request) { return child_->CreateApiSpec(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryLogging::UpdateApiSpec(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::UpdateApiSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::UpdateApiSpecRequest const&
                 request) { return child_->UpdateApiSpec(context, request); },
      context, request, __func__, tracing_options_);
}

Status RegistryLogging::DeleteApiSpec(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteApiSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::DeleteApiSpecRequest const&
                 request) { return child_->DeleteApiSpec(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryLogging::TagApiSpecRevision(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::TagApiSpecRevisionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::TagApiSpecRevisionRequest const&
                 request) {
        return child_->TagApiSpecRevision(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ListApiSpecRevisionsResponse>
RegistryLogging::ListApiSpecRevisions(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListApiSpecRevisionsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::ListApiSpecRevisionsRequest const&
              request) {
        return child_->ListApiSpecRevisions(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryLogging::RollbackApiSpec(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::RollbackApiSpecRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::RollbackApiSpecRequest const&
                 request) { return child_->RollbackApiSpec(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryLogging::DeleteApiSpecRevision(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteApiSpecRevisionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::DeleteApiSpecRevisionRequest const&
              request) {
        return child_->DeleteApiSpecRevision(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ListApiDeploymentsResponse>
RegistryLogging::ListApiDeployments(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListApiDeploymentsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::ListApiDeploymentsRequest const&
                 request) {
        return child_->ListApiDeployments(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryLogging::GetApiDeployment(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetApiDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::GetApiDeploymentRequest const&
                 request) {
        return child_->GetApiDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryLogging::CreateApiDeployment(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::CreateApiDeploymentRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::CreateApiDeploymentRequest const&
              request) {
        return child_->CreateApiDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryLogging::UpdateApiDeployment(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::UpdateApiDeploymentRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::UpdateApiDeploymentRequest const&
              request) {
        return child_->UpdateApiDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

Status RegistryLogging::DeleteApiDeployment(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteApiDeploymentRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::DeleteApiDeploymentRequest const&
              request) {
        return child_->DeleteApiDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryLogging::TagApiDeploymentRevision(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::TagApiDeploymentRevisionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::
                 TagApiDeploymentRevisionRequest const& request) {
        return child_->TagApiDeploymentRevision(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ListApiDeploymentRevisionsResponse>
RegistryLogging::ListApiDeploymentRevisions(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListApiDeploymentRevisionsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::
                 ListApiDeploymentRevisionsRequest const& request) {
        return child_->ListApiDeploymentRevisions(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryLogging::RollbackApiDeployment(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::RollbackApiDeploymentRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::RollbackApiDeploymentRequest const&
              request) {
        return child_->RollbackApiDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryLogging::DeleteApiDeploymentRevision(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteApiDeploymentRevisionRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::
                 DeleteApiDeploymentRevisionRequest const& request) {
        return child_->DeleteApiDeploymentRevision(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::ListArtifactsResponse>
RegistryLogging::ListArtifacts(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ListArtifactsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::ListArtifactsRequest const&
                 request) { return child_->ListArtifacts(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::Artifact>
RegistryLogging::GetArtifact(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetArtifactRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::GetArtifactRequest const&
                 request) { return child_->GetArtifact(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::api::HttpBody> RegistryLogging::GetArtifactContents(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::GetArtifactContentsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          grpc::ClientContext& context,
          google::cloud::apigeeregistry::v1::GetArtifactContentsRequest const&
              request) {
        return child_->GetArtifactContents(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::Artifact>
RegistryLogging::CreateArtifact(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::CreateArtifactRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::CreateArtifactRequest const&
                 request) { return child_->CreateArtifact(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::apigeeregistry::v1::Artifact>
RegistryLogging::ReplaceArtifact(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::ReplaceArtifactRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::ReplaceArtifactRequest const&
                 request) { return child_->ReplaceArtifact(context, request); },
      context, request, __func__, tracing_options_);
}

Status RegistryLogging::DeleteArtifact(
    grpc::ClientContext& context,
    google::cloud::apigeeregistry::v1::DeleteArtifactRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::apigeeregistry::v1::DeleteArtifactRequest const&
                 request) { return child_->DeleteArtifact(context, request); },
      context, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apigeeregistry_v1_internal
}  // namespace cloud
}  // namespace google
