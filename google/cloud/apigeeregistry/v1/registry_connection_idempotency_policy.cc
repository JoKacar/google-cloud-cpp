// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apigeeregistry/v1/registry_service.proto

#include "google/cloud/apigeeregistry/v1/registry_connection_idempotency_policy.h"
#include <memory>

namespace google {
namespace cloud {
namespace apigeeregistry_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

RegistryConnectionIdempotencyPolicy::~RegistryConnectionIdempotencyPolicy() =
    default;

std::unique_ptr<RegistryConnectionIdempotencyPolicy>
RegistryConnectionIdempotencyPolicy::clone() const {
  return std::make_unique<RegistryConnectionIdempotencyPolicy>(*this);
}

Idempotency RegistryConnectionIdempotencyPolicy::ListApis(
    google::cloud::apigeeregistry::v1::ListApisRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetApi(
    google::cloud::apigeeregistry::v1::GetApiRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::CreateApi(
    google::cloud::apigeeregistry::v1::CreateApiRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::UpdateApi(
    google::cloud::apigeeregistry::v1::UpdateApiRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteApi(
    google::cloud::apigeeregistry::v1::DeleteApiRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ListApiVersions(
    google::cloud::apigeeregistry::v1::ListApiVersionsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetApiVersion(
    google::cloud::apigeeregistry::v1::GetApiVersionRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::CreateApiVersion(
    google::cloud::apigeeregistry::v1::CreateApiVersionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::UpdateApiVersion(
    google::cloud::apigeeregistry::v1::UpdateApiVersionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteApiVersion(
    google::cloud::apigeeregistry::v1::DeleteApiVersionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ListApiSpecs(
    google::cloud::apigeeregistry::v1::ListApiSpecsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetApiSpec(
    google::cloud::apigeeregistry::v1::GetApiSpecRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetApiSpecContents(
    google::cloud::apigeeregistry::v1::GetApiSpecContentsRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::CreateApiSpec(
    google::cloud::apigeeregistry::v1::CreateApiSpecRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::UpdateApiSpec(
    google::cloud::apigeeregistry::v1::UpdateApiSpecRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteApiSpec(
    google::cloud::apigeeregistry::v1::DeleteApiSpecRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::TagApiSpecRevision(
    google::cloud::apigeeregistry::v1::TagApiSpecRevisionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ListApiSpecRevisions(
    google::cloud::apigeeregistry::v1::ListApiSpecRevisionsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::RollbackApiSpec(
    google::cloud::apigeeregistry::v1::RollbackApiSpecRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteApiSpecRevision(
    google::cloud::apigeeregistry::v1::DeleteApiSpecRevisionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ListApiDeployments(
    google::cloud::apigeeregistry::v1::ListApiDeploymentsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetApiDeployment(
    google::cloud::apigeeregistry::v1::GetApiDeploymentRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::CreateApiDeployment(
    google::cloud::apigeeregistry::v1::CreateApiDeploymentRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::UpdateApiDeployment(
    google::cloud::apigeeregistry::v1::UpdateApiDeploymentRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteApiDeployment(
    google::cloud::apigeeregistry::v1::DeleteApiDeploymentRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::TagApiDeploymentRevision(
    google::cloud::apigeeregistry::v1::TagApiDeploymentRevisionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ListApiDeploymentRevisions(
    google::cloud::apigeeregistry::v1::
        ListApiDeploymentRevisionsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::RollbackApiDeployment(
    google::cloud::apigeeregistry::v1::RollbackApiDeploymentRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteApiDeploymentRevision(
    google::cloud::apigeeregistry::v1::
        DeleteApiDeploymentRevisionRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ListArtifacts(
    google::cloud::apigeeregistry::v1::ListArtifactsRequest) {  // NOLINT
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetArtifact(
    google::cloud::apigeeregistry::v1::GetArtifactRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::GetArtifactContents(
    google::cloud::apigeeregistry::v1::GetArtifactContentsRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::CreateArtifact(
    google::cloud::apigeeregistry::v1::CreateArtifactRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::ReplaceArtifact(
    google::cloud::apigeeregistry::v1::ReplaceArtifactRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency RegistryConnectionIdempotencyPolicy::DeleteArtifact(
    google::cloud::apigeeregistry::v1::DeleteArtifactRequest const&) {
  return Idempotency::kNonIdempotent;
}

std::unique_ptr<RegistryConnectionIdempotencyPolicy>
MakeDefaultRegistryConnectionIdempotencyPolicy() {
  return std::make_unique<RegistryConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apigeeregistry_v1
}  // namespace cloud
}  // namespace google
