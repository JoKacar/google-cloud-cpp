// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apigeeregistry/v1/registry_service.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIGEEREGISTRY_V1_REGISTRY_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIGEEREGISTRY_V1_REGISTRY_CLIENT_H

#include "google/cloud/apigeeregistry/v1/registry_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>

namespace google {
namespace cloud {
namespace apigeeregistry_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// The Registry service allows teams to manage descriptions of APIs.
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class RegistryClient {
 public:
  explicit RegistryClient(std::shared_ptr<RegistryConnection> connection,
                          Options opts = {});
  ~RegistryClient();

  ///@{
  /// @name Copy and move support
  RegistryClient(RegistryClient const&) = default;
  RegistryClient& operator=(RegistryClient const&) = default;
  RegistryClient(RegistryClient&&) = default;
  RegistryClient& operator=(RegistryClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(RegistryClient const& a, RegistryClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(RegistryClient const& a, RegistryClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Returns matching APIs.
  ///
  /// @param parent  Required. The parent, which owns this collection of APIs.
  ///  Format: `projects/*/locations/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.Api], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.ListApisRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L426}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::Api> ListApis(
      std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Returns matching APIs.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListApisRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.Api], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.ListApisRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L426}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::Api> ListApis(
      google::cloud::apigeeregistry::v1::ListApisRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns a specified API.
  ///
  /// @param name  Required. The name of the API to retrieve.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Api])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.GetApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L465}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Api> GetApi(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Returns a specified API.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetApiRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Api])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.GetApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L465}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Api> GetApi(
      google::cloud::apigeeregistry::v1::GetApiRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a specified API.
  ///
  /// @param parent  Required. The parent, which owns this collection of APIs.
  ///  Format: `projects/*/locations/*`
  /// @param api  Required. The API to create.
  /// @param api_id  Required. The ID to use for the API, which will become the final component of
  ///  the API's resource name.
  ///  @n
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  ///  @n
  ///  Following AIP-162, IDs must not have the form of a UUID.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Api])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.CreateApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L477}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Api> CreateApi(
      std::string const& parent,
      google::cloud::apigeeregistry::v1::Api const& api,
      std::string const& api_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a specified API.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.CreateApiRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Api])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.CreateApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L477}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Api> CreateApi(
      google::cloud::apigeeregistry::v1::CreateApiRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified API.
  ///
  /// @param api  Required. The API to update.
  ///  @n
  ///  The `name` field is used to identify the API to update.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param update_mask  The list of fields to be updated. If omitted, all fields are updated that
  ///  are set in the request message (fields set to default values are ignored).
  ///  If an asterisk "*" is specified, all fields are updated, including fields
  ///  that are unspecified/default in the request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Api])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.UpdateApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L501}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Api> UpdateApi(
      google::cloud::apigeeregistry::v1::Api const& api,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified API.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.UpdateApiRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Api])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Api]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L33}
  /// [google.cloud.apigeeregistry.v1.UpdateApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L501}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Api> UpdateApi(
      google::cloud::apigeeregistry::v1::UpdateApiRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Removes a specified API and all of the resources that it
  /// owns.
  ///
  /// @param name  Required. The name of the API to delete.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L520}
  ///
  // clang-format on
  Status DeleteApi(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Removes a specified API and all of the resources that it
  /// owns.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteApiRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L520}
  ///
  // clang-format on
  Status DeleteApi(
      google::cloud::apigeeregistry::v1::DeleteApiRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns matching versions.
  ///
  /// @param parent  Required. The parent, which owns this collection of versions.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiVersion], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.ListApiVersionsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L536}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiVersion> ListApiVersions(
      std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Returns matching versions.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListApiVersionsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiVersion], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.ListApiVersionsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L536}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiVersion> ListApiVersions(
      google::cloud::apigeeregistry::v1::ListApiVersionsRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns a specified version.
  ///
  /// @param name  Required. The name of the version to retrieve.
  ///  Format: `projects/*/locations/*/apis/*/versions/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.GetApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L575}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiVersion> GetApiVersion(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Returns a specified version.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetApiVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.GetApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L575}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiVersion> GetApiVersion(
      google::cloud::apigeeregistry::v1::GetApiVersionRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a specified version.
  ///
  /// @param parent  Required. The parent, which owns this collection of versions.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param api_version  Required. The version to create.
  /// @param api_version_id  Required. The ID to use for the version, which will become the final component of
  ///  the version's resource name.
  ///  @n
  ///  This value should be 1-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  ///  @n
  ///  Following AIP-162, IDs must not have the form of a UUID.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.CreateApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L587}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiVersion> CreateApiVersion(
      std::string const& parent,
      google::cloud::apigeeregistry::v1::ApiVersion const& api_version,
      std::string const& api_version_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a specified version.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.CreateApiVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.CreateApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L587}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiVersion> CreateApiVersion(
      google::cloud::apigeeregistry::v1::CreateApiVersionRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified version.
  ///
  /// @param api_version  Required. The version to update.
  ///  @n
  ///  The `name` field is used to identify the version to update.
  ///  Format: `projects/*/locations/*/apis/*/versions/*`
  /// @param update_mask  The list of fields to be updated. If omitted, all fields are updated that
  ///  are set in the request message (fields set to default values are ignored).
  ///  If an asterisk "*" is specified, all fields are updated, including fields
  ///  that are unspecified/default in the request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.UpdateApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L611}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiVersion> UpdateApiVersion(
      google::cloud::apigeeregistry::v1::ApiVersion const& api_version,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified version.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.UpdateApiVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiVersion])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiVersion]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L95}
  /// [google.cloud.apigeeregistry.v1.UpdateApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L611}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiVersion> UpdateApiVersion(
      google::cloud::apigeeregistry::v1::UpdateApiVersionRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Removes a specified version and all of the resources that
  /// it owns.
  ///
  /// @param name  Required. The name of the version to delete.
  ///  Format: `projects/*/locations/*/apis/*/versions/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L630}
  ///
  // clang-format on
  Status DeleteApiVersion(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Removes a specified version and all of the resources that
  /// it owns.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteApiVersionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiVersionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L630}
  ///
  // clang-format on
  Status DeleteApiVersion(
      google::cloud::apigeeregistry::v1::DeleteApiVersionRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns matching specs.
  ///
  /// @param parent  Required. The parent, which owns this collection of specs.
  ///  Format: `projects/*/locations/*/apis/*/versions/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiSpec], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.ListApiSpecsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L646}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiSpec> ListApiSpecs(
      std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Returns matching specs.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListApiSpecsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiSpec], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.ListApiSpecsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L646}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiSpec> ListApiSpecs(
      google::cloud::apigeeregistry::v1::ListApiSpecsRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns a specified spec.
  ///
  /// @param name  Required. The name of the spec to retrieve.
  ///  Format: `projects/*/locations/*/apis/*/versions/*/specs/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.GetApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L685}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> GetApiSpec(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Returns a specified spec.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetApiSpecRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.GetApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L685}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> GetApiSpec(
      google::cloud::apigeeregistry::v1::GetApiSpecRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns the contents of a specified spec.
  /// If specs are stored with GZip compression, the default behavior
  /// is to return the spec uncompressed (the mime_type response field
  /// indicates the exact format returned).
  ///
  /// @param name  Required. The name of the spec whose contents should be retrieved.
  ///  Format: `projects/*/locations/*/apis/*/versions/*/specs/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.api.HttpBody])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.api.HttpBody]: @googleapis_reference_link{google/api/httpbody.proto#L71}
  /// [google.cloud.apigeeregistry.v1.GetApiSpecContentsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L697}
  ///
  // clang-format on
  StatusOr<google::api::HttpBody> GetApiSpecContents(std::string const& name,
                                                     Options opts = {});

  // clang-format off
  ///
  /// Returns the contents of a specified spec.
  /// If specs are stored with GZip compression, the default behavior
  /// is to return the spec uncompressed (the mime_type response field
  /// indicates the exact format returned).
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetApiSpecContentsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.api.HttpBody])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.api.HttpBody]: @googleapis_reference_link{google/api/httpbody.proto#L71}
  /// [google.cloud.apigeeregistry.v1.GetApiSpecContentsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L697}
  ///
  // clang-format on
  StatusOr<google::api::HttpBody> GetApiSpecContents(
      google::cloud::apigeeregistry::v1::GetApiSpecContentsRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a specified spec.
  ///
  /// @param parent  Required. The parent, which owns this collection of specs.
  ///  Format: `projects/*/locations/*/apis/*/versions/*`
  /// @param api_spec  Required. The spec to create.
  /// @param api_spec_id  Required. The ID to use for the spec, which will become the final component of
  ///  the spec's resource name.
  ///  @n
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  ///  @n
  ///  Following AIP-162, IDs must not have the form of a UUID.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.CreateApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L709}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> CreateApiSpec(
      std::string const& parent,
      google::cloud::apigeeregistry::v1::ApiSpec const& api_spec,
      std::string const& api_spec_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a specified spec.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.CreateApiSpecRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.CreateApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L709}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> CreateApiSpec(
      google::cloud::apigeeregistry::v1::CreateApiSpecRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified spec.
  ///
  /// @param api_spec  Required. The spec to update.
  ///  @n
  ///  The `name` field is used to identify the spec to update.
  ///  Format: `projects/*/locations/*/apis/*/versions/*/specs/*`
  /// @param update_mask  The list of fields to be updated. If omitted, all fields are updated that
  ///  are set in the request message (fields set to default values are ignored).
  ///  If an asterisk "*" is specified, all fields are updated, including fields
  ///  that are unspecified/default in the request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.UpdateApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L733}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> UpdateApiSpec(
      google::cloud::apigeeregistry::v1::ApiSpec const& api_spec,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified spec.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.UpdateApiSpecRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.UpdateApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L733}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> UpdateApiSpec(
      google::cloud::apigeeregistry::v1::UpdateApiSpecRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Removes a specified spec, all revisions, and all child
  /// resources (e.g., artifacts).
  ///
  /// @param name  Required. The name of the spec to delete.
  ///  Format: `projects/*/locations/*/apis/*/versions/*/specs/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L752}
  ///
  // clang-format on
  Status DeleteApiSpec(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Removes a specified spec, all revisions, and all child
  /// resources (e.g., artifacts).
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteApiSpecRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L752}
  ///
  // clang-format on
  Status DeleteApiSpec(
      google::cloud::apigeeregistry::v1::DeleteApiSpecRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Adds a tag to a specified revision of a spec.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.TagApiSpecRevisionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.TagApiSpecRevisionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L768}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> TagApiSpecRevision(
      google::cloud::apigeeregistry::v1::TagApiSpecRevisionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all revisions of a spec.
  /// Revisions are returned in descending order of revision creation time.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListApiSpecRevisionsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiSpec], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.ListApiSpecRevisionsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L783}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiSpec> ListApiSpecRevisions(
      google::cloud::apigeeregistry::v1::ListApiSpecRevisionsRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Sets the current revision to a specified prior revision.
  /// Note that this creates a new revision with a new revision ID.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.RollbackApiSpecRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.RollbackApiSpecRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L811}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> RollbackApiSpec(
      google::cloud::apigeeregistry::v1::RollbackApiSpecRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Deletes a revision of a spec.
  ///
  /// @param name  Required. The name of the spec revision to be deleted,
  ///  with a revision ID explicitly included.
  ///  @n
  ///  Example:
  ///  `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml@c7cfa2a8`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.DeleteApiSpecRevisionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L828}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> DeleteApiSpecRevision(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Deletes a revision of a spec.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteApiSpecRevisionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiSpec])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiSpec]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L152}
  /// [google.cloud.apigeeregistry.v1.DeleteApiSpecRevisionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L828}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiSpec> DeleteApiSpecRevision(
      google::cloud::apigeeregistry::v1::DeleteApiSpecRevisionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns matching deployments.
  ///
  /// @param parent  Required. The parent, which owns this collection of deployments.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiDeployment], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.ListApiDeploymentsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L843}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>
  ListApiDeployments(std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Returns matching deployments.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListApiDeploymentsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiDeployment], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.ListApiDeploymentsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L843}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>
  ListApiDeployments(
      google::cloud::apigeeregistry::v1::ListApiDeploymentsRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns a specified deployment.
  ///
  /// @param name  Required. The name of the deployment to retrieve.
  ///  Format: `projects/*/locations/*/apis/*/deployments/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.GetApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L882}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment> GetApiDeployment(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Returns a specified deployment.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetApiDeploymentRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.GetApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L882}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment> GetApiDeployment(
      google::cloud::apigeeregistry::v1::GetApiDeploymentRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a specified deployment.
  ///
  /// @param parent  Required. The parent, which owns this collection of deployments.
  ///  Format: `projects/*/locations/*/apis/*`
  /// @param api_deployment  Required. The deployment to create.
  /// @param api_deployment_id  Required. The ID to use for the deployment, which will become the final component of
  ///  the deployment's resource name.
  ///  @n
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  ///  @n
  ///  Following AIP-162, IDs must not have the form of a UUID.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.CreateApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L894}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  CreateApiDeployment(
      std::string const& parent,
      google::cloud::apigeeregistry::v1::ApiDeployment const& api_deployment,
      std::string const& api_deployment_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a specified deployment.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.CreateApiDeploymentRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.CreateApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L894}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  CreateApiDeployment(
      google::cloud::apigeeregistry::v1::CreateApiDeploymentRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified deployment.
  ///
  /// @param api_deployment  Required. The deployment to update.
  ///  @n
  ///  The `name` field is used to identify the deployment to update.
  ///  Format: `projects/*/locations/*/apis/*/deployments/*`
  /// @param update_mask  The list of fields to be updated. If omitted, all fields are updated that
  ///  are set in the request message (fields set to default values are ignored).
  ///  If an asterisk "*" is specified, all fields are updated, including fields
  ///  that are unspecified/default in the request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.UpdateApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L918}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  UpdateApiDeployment(
      google::cloud::apigeeregistry::v1::ApiDeployment const& api_deployment,
      google::protobuf::FieldMask const& update_mask, Options opts = {});

  // clang-format off
  ///
  /// Used to modify a specified deployment.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.UpdateApiDeploymentRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.UpdateApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L918}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  UpdateApiDeployment(
      google::cloud::apigeeregistry::v1::UpdateApiDeploymentRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Removes a specified deployment, all revisions, and all
  /// child resources (e.g., artifacts).
  ///
  /// @param name  Required. The name of the deployment to delete.
  ///  Format: `projects/*/locations/*/apis/*/deployments/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L937}
  ///
  // clang-format on
  Status DeleteApiDeployment(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Removes a specified deployment, all revisions, and all
  /// child resources (e.g., artifacts).
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteApiDeploymentRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L937}
  ///
  // clang-format on
  Status DeleteApiDeployment(
      google::cloud::apigeeregistry::v1::DeleteApiDeploymentRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Adds a tag to a specified revision of a
  /// deployment.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.TagApiDeploymentRevisionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.TagApiDeploymentRevisionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L953}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  TagApiDeploymentRevision(
      google::cloud::apigeeregistry::v1::TagApiDeploymentRevisionRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all revisions of a deployment.
  /// Revisions are returned in descending order of revision creation time.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListApiDeploymentRevisionsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.ApiDeployment], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.ListApiDeploymentRevisionsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L968}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>
  ListApiDeploymentRevisions(
      google::cloud::apigeeregistry::v1::ListApiDeploymentRevisionsRequest
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Sets the current revision to a specified prior
  /// revision. Note that this creates a new revision with a new revision ID.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.RollbackApiDeploymentRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.RollbackApiDeploymentRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L996}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  RollbackApiDeployment(
      google::cloud::apigeeregistry::v1::RollbackApiDeploymentRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Deletes a revision of a deployment.
  ///
  /// @param name  Required. The name of the deployment revision to be deleted,
  ///  with a revision ID explicitly included.
  ///  @n
  ///  Example:
  ///  `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.DeleteApiDeploymentRevisionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1013}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  DeleteApiDeploymentRevision(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Deletes a revision of a deployment.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteApiDeploymentRevisionRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.ApiDeployment])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.ApiDeployment]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L240}
  /// [google.cloud.apigeeregistry.v1.DeleteApiDeploymentRevisionRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1013}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
  DeleteApiDeploymentRevision(
      google::cloud::apigeeregistry::v1::
          DeleteApiDeploymentRevisionRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns matching artifacts.
  ///
  /// @param parent  Required. The parent, which owns this collection of artifacts.
  ///  Format: `{parent}`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.Artifact], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.ListArtifactsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1028}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::Artifact> ListArtifacts(
      std::string const& parent, Options opts = {});

  // clang-format off
  ///
  /// Returns matching artifacts.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ListArtifactsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [StreamRange](@ref google::cloud::StreamRange)
  ///     to iterate of the results. See the documentation of this type for
  ///     details. In brief, this class has `begin()` and `end()` member
  ///     functions returning a iterator class meeting the
  ///     [input iterator requirements]. The value type for this iterator is a
  ///     [`StatusOr`] as the iteration may fail even after some values are
  ///     retrieved successfully, for example, if there is a network disconnect.
  ///     An empty set of results does not indicate an error, it indicates
  ///     that there are no resources meeting the request criteria.
  ///     On a successful iteration the `StatusOr<T>` contains elements of type
  ///     [google.cloud.apigeeregistry.v1.Artifact], or rather,
  ///     the C++ class generated by Protobuf from that type. Please consult the
  ///     Protobuf documentation for details on the [Protobuf mapping rules].
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.ListArtifactsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1028}
  ///
  // clang-format on
  StreamRange<google::cloud::apigeeregistry::v1::Artifact> ListArtifacts(
      google::cloud::apigeeregistry::v1::ListArtifactsRequest request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns a specified artifact.
  ///
  /// @param name  Required. The name of the artifact to retrieve.
  ///  Format: `{parent}/artifacts/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Artifact])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.GetArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1067}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Artifact> GetArtifact(
      std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Returns a specified artifact.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetArtifactRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Artifact])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.GetArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1067}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Artifact> GetArtifact(
      google::cloud::apigeeregistry::v1::GetArtifactRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns the contents of a specified artifact.
  /// If artifacts are stored with GZip compression, the default behavior
  /// is to return the artifact uncompressed (the mime_type response field
  /// indicates the exact format returned).
  ///
  /// @param name  Required. The name of the artifact whose contents should be retrieved.
  ///  Format: `{parent}/artifacts/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.api.HttpBody])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.api.HttpBody]: @googleapis_reference_link{google/api/httpbody.proto#L71}
  /// [google.cloud.apigeeregistry.v1.GetArtifactContentsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1079}
  ///
  // clang-format on
  StatusOr<google::api::HttpBody> GetArtifactContents(std::string const& name,
                                                      Options opts = {});

  // clang-format off
  ///
  /// Returns the contents of a specified artifact.
  /// If artifacts are stored with GZip compression, the default behavior
  /// is to return the artifact uncompressed (the mime_type response field
  /// indicates the exact format returned).
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.GetArtifactContentsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.api.HttpBody])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.api.HttpBody]: @googleapis_reference_link{google/api/httpbody.proto#L71}
  /// [google.cloud.apigeeregistry.v1.GetArtifactContentsRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1079}
  ///
  // clang-format on
  StatusOr<google::api::HttpBody> GetArtifactContents(
      google::cloud::apigeeregistry::v1::GetArtifactContentsRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a specified artifact.
  ///
  /// @param parent  Required. The parent, which owns this collection of artifacts.
  ///  Format: `{parent}`
  /// @param artifact  Required. The artifact to create.
  /// @param artifact_id  Required. The ID to use for the artifact, which will become the final component of
  ///  the artifact's resource name.
  ///  @n
  ///  This value should be 4-63 characters, and valid characters
  ///  are /[a-z][0-9]-/.
  ///  @n
  ///  Following AIP-162, IDs must not have the form of a UUID.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Artifact])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.CreateArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1091}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Artifact> CreateArtifact(
      std::string const& parent,
      google::cloud::apigeeregistry::v1::Artifact const& artifact,
      std::string const& artifact_id, Options opts = {});

  // clang-format off
  ///
  /// Creates a specified artifact.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.CreateArtifactRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Artifact])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.CreateArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1091}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Artifact> CreateArtifact(
      google::cloud::apigeeregistry::v1::CreateArtifactRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Used to replace a specified artifact.
  ///
  /// @param artifact  Required. The artifact to replace.
  ///  @n
  ///  The `name` field is used to identify the artifact to replace.
  ///  Format: `{parent}/artifacts/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Artifact])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.ReplaceArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1115}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Artifact> ReplaceArtifact(
      google::cloud::apigeeregistry::v1::Artifact const& artifact,
      Options opts = {});

  // clang-format off
  ///
  /// Used to replace a specified artifact.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.ReplaceArtifactRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.apigeeregistry.v1.Artifact])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.Artifact]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_models.proto#L325}
  /// [google.cloud.apigeeregistry.v1.ReplaceArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1115}
  ///
  // clang-format on
  StatusOr<google::cloud::apigeeregistry::v1::Artifact> ReplaceArtifact(
      google::cloud::apigeeregistry::v1::ReplaceArtifactRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Removes a specified artifact.
  ///
  /// @param name  Required. The name of the artifact to delete.
  ///  Format: `{parent}/artifacts/*`
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1124}
  ///
  // clang-format on
  Status DeleteArtifact(std::string const& name, Options opts = {});

  // clang-format off
  ///
  /// Removes a specified artifact.
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.apigeeregistry.v1.DeleteArtifactRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.apigeeregistry.v1.DeleteArtifactRequest]: @googleapis_reference_link{google/cloud/apigeeregistry/v1/registry_service.proto#L1124}
  ///
  // clang-format on
  Status DeleteArtifact(
      google::cloud::apigeeregistry::v1::DeleteArtifactRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<RegistryConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apigeeregistry_v1
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_APIGEEREGISTRY_V1_REGISTRY_CLIENT_H
