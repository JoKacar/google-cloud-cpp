// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/apigeeregistry/v1/registry_service.proto

#include "google/cloud/apigeeregistry/v1/registry_connection.h"
#include "google/cloud/apigeeregistry/v1/internal/registry_connection_impl.h"
#include "google/cloud/apigeeregistry/v1/internal/registry_option_defaults.h"
#include "google/cloud/apigeeregistry/v1/internal/registry_stub_factory.h"
#include "google/cloud/apigeeregistry/v1/internal/registry_tracing_connection.h"
#include "google/cloud/apigeeregistry/v1/registry_options.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/common_options.h"
#include "google/cloud/credentials.h"
#include "google/cloud/grpc_options.h"
#include "google/cloud/internal/pagination_range.h"
#include <memory>

namespace google {
namespace cloud {
namespace apigeeregistry_v1 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

RegistryConnection::~RegistryConnection() = default;

StreamRange<google::cloud::apigeeregistry::v1::Api>
RegistryConnection::ListApis(
    google::cloud::apigeeregistry::v1::
        ListApisRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::Api>>();
}

StatusOr<google::cloud::apigeeregistry::v1::Api> RegistryConnection::GetApi(
    google::cloud::apigeeregistry::v1::GetApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::Api> RegistryConnection::CreateApi(
    google::cloud::apigeeregistry::v1::CreateApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::Api> RegistryConnection::UpdateApi(
    google::cloud::apigeeregistry::v1::UpdateApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status RegistryConnection::DeleteApi(
    google::cloud::apigeeregistry::v1::DeleteApiRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryConnection::ListApiVersions(
    google::cloud::apigeeregistry::v1::
        ListApiVersionsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::ApiVersion>>();
}

StatusOr<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryConnection::GetApiVersion(
    google::cloud::apigeeregistry::v1::GetApiVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryConnection::CreateApiVersion(
    google::cloud::apigeeregistry::v1::CreateApiVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiVersion>
RegistryConnection::UpdateApiVersion(
    google::cloud::apigeeregistry::v1::UpdateApiVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status RegistryConnection::DeleteApiVersion(
    google::cloud::apigeeregistry::v1::DeleteApiVersionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::ListApiSpecs(
    google::cloud::apigeeregistry::v1::
        ListApiSpecsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::ApiSpec>>();
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::GetApiSpec(
    google::cloud::apigeeregistry::v1::GetApiSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::api::HttpBody> RegistryConnection::GetApiSpecContents(
    google::cloud::apigeeregistry::v1::GetApiSpecContentsRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::CreateApiSpec(
    google::cloud::apigeeregistry::v1::CreateApiSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::UpdateApiSpec(
    google::cloud::apigeeregistry::v1::UpdateApiSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status RegistryConnection::DeleteApiSpec(
    google::cloud::apigeeregistry::v1::DeleteApiSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::TagApiSpecRevision(
    google::cloud::apigeeregistry::v1::TagApiSpecRevisionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::ListApiSpecRevisions(
    google::cloud::apigeeregistry::v1::
        ListApiSpecRevisionsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::ApiSpec>>();
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::RollbackApiSpec(
    google::cloud::apigeeregistry::v1::RollbackApiSpecRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiSpec>
RegistryConnection::DeleteApiSpecRevision(
    google::cloud::apigeeregistry::v1::DeleteApiSpecRevisionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::ListApiDeployments(
    google::cloud::apigeeregistry::v1::
        ListApiDeploymentsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>>();
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::GetApiDeployment(
    google::cloud::apigeeregistry::v1::GetApiDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::CreateApiDeployment(
    google::cloud::apigeeregistry::v1::CreateApiDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::UpdateApiDeployment(
    google::cloud::apigeeregistry::v1::UpdateApiDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status RegistryConnection::DeleteApiDeployment(
    google::cloud::apigeeregistry::v1::DeleteApiDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::TagApiDeploymentRevision(
    google::cloud::apigeeregistry::v1::TagApiDeploymentRevisionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::ListApiDeploymentRevisions(
    google::cloud::apigeeregistry::v1::
        ListApiDeploymentRevisionsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::ApiDeployment>>();
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::RollbackApiDeployment(
    google::cloud::apigeeregistry::v1::RollbackApiDeploymentRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::ApiDeployment>
RegistryConnection::DeleteApiDeploymentRevision(
    google::cloud::apigeeregistry::v1::
        DeleteApiDeploymentRevisionRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StreamRange<google::cloud::apigeeregistry::v1::Artifact>
RegistryConnection::ListArtifacts(
    google::cloud::apigeeregistry::v1::
        ListArtifactsRequest) {  // NOLINT(performance-unnecessary-value-param)
  return google::cloud::internal::MakeUnimplementedPaginationRange<
      StreamRange<google::cloud::apigeeregistry::v1::Artifact>>();
}

StatusOr<google::cloud::apigeeregistry::v1::Artifact>
RegistryConnection::GetArtifact(
    google::cloud::apigeeregistry::v1::GetArtifactRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::api::HttpBody> RegistryConnection::GetArtifactContents(
    google::cloud::apigeeregistry::v1::GetArtifactContentsRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::Artifact>
RegistryConnection::CreateArtifact(
    google::cloud::apigeeregistry::v1::CreateArtifactRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

StatusOr<google::cloud::apigeeregistry::v1::Artifact>
RegistryConnection::ReplaceArtifact(
    google::cloud::apigeeregistry::v1::ReplaceArtifactRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

Status RegistryConnection::DeleteArtifact(
    google::cloud::apigeeregistry::v1::DeleteArtifactRequest const&) {
  return Status(StatusCode::kUnimplemented, "not implemented");
}

std::shared_ptr<RegistryConnection> MakeRegistryConnection(Options options) {
  internal::CheckExpectedOptions<CommonOptionList, GrpcOptionList,
                                 UnifiedCredentialsOptionList,
                                 RegistryPolicyOptionList>(options, __func__);
  options =
      apigeeregistry_v1_internal::RegistryDefaultOptions(std::move(options));
  auto background = internal::MakeBackgroundThreadsFactory(options)();
  auto stub = apigeeregistry_v1_internal::CreateDefaultRegistryStub(
      background->cq(), options);
  return apigeeregistry_v1_internal::MakeRegistryTracingConnection(
      std::make_shared<apigeeregistry_v1_internal::RegistryConnectionImpl>(
          std::move(background), std::move(stub), std::move(options)));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace apigeeregistry_v1
}  // namespace cloud
}  // namespace google
